# coding: utf-8

ontcijfersleutel = {'\n': '', '': '\n', '⢶': '⠀', '⠀': '⠁', '⢘': '⠂', '⢳': '⠃', '⣛': '⠄', '⠯': '⠅', '⢧': '⠆', '⠓': '⠇', '⠈': '⠈', '⡝': '⠉', '⠰': '⠊', '⠽': '⠋', '⣞': '⠌', '⠦': '⠍', '⡽': '⠎', '⠆': '⠏', '⡏': '⠐', '⡥': '⠑', '⣲': '⠒', '⣺': '⠓', '⢩': '⠔', '⢊': '⠕', '⢠': '⠖', '⡶': '⠗', '⡸': '⠘', '⣹': '⠙', '⢝': '⠚', '⡗': '⠛', '⠂': '⠜', '⣻': '⠝', '⡅': '⠞', '⣋': '⠟', '⠬': '⠠', '⢉': '⠡', '⠒': '⠢', '⣑': '⠣', '⣽': '⠤', '⡬': '⠥', '⣸': '⠦', '⣿': '⠧', '⠨': '⠨', '⢑': '⠩', '⠪': '⠪', '⣊': '⠫', '⡰': '⠬', '⠎': '⠭', '⢈': '⠮', '⢲': '⠯', '⢅': '⠰', '⢀': '⠱', '⢏': '⠲', '⣅': '⠳', '⠲': '⠴', '⡂': '⠵', '⢍': '⠶', '⢖': '⠷', '⠺': '⠸', '⡞': '⠹', '⡿': '⠺', '⢌': '⠻', '⢰': '⠼', '⢦': '⠽', '⠚': '⠾', '⡾': '⠿', '⠗': '⡀', '⡷': '⡁', '⣇': '⡂', '⡎': '⡃', '⡋': '⡄', '⣏': '⡅', '⣚': '⡆', '⠑': '⡇', '⡔': '⡈', '⣎': '⡉', '⡹': '⡊', '⡯': '⡋', '⣰': '⡌', '⡕': '⡍', '⢆': '⡎', '⡁': '⡏', '⡍': '⡐', '⠫': '⡑', '⠛': '⡒', '⡺': '⡓', '⡌': '⡔', '⢙': '⡕', '⢓': '⡖', '⠩': '⡗', '⠭': '⡘', '⡖': '⡙', '⠏': '⡚', '⢐': '⡛', '⡆': '⡜', '⢪': '⡝', '⠸': '⡞', '⡇': '⡟', '⣣': '⡠', '⠥': '⡡', '⢁': '⡢', '⡲': '⡣', '⡩': '⡤', '⣒': '⡥', '⠷': '⡦', '⠌': '⡧', '⠣': '⡨', '⢟': '⡩', '⡑': '⡪', '⣯': '⡫', '⡭': '⡬', '⡉': '⡭', '⣆': '⡮', '⣩': '⡯', '⠋': '⡰', '⡡': '⡱', '⡘': '⡲', '⡵': '⡳', '⠃': '⡴', '⢿': '⡵', '⣫': '⡶', '⠶': '⡷', '⣠': '⡸', '⢢': '⡹', '⣃': '⡺', '⡀': '⡻', '⠜': '⡼', '⢨': '⡽', '⡟': '⡾', '⡐': '⡿', '⣷': '⢀', '⣖': '⢁', '⠡': '⢂', '⣝': '⢃', '⣟': '⢄', '⡱': '⢅', '⣀': '⢆', '⣓': '⢇', '⠾': '⢈', '⡤': '⢉', '⡢': '⢊', '⣕': '⢋', '⢴': '⢌', '⡜': '⢍', '⣴': '⢎', '⢗': '⢏', '⣙': '⢐', '⡨': '⢑', '⢬': '⢒', '⢽': '⢓', '⡳': '⢔', '⢃': '⢕', '⢇': '⢖', '⢹': '⢗', '⠧': '⢘', '⡮': '⢙', '⢡': '⢚', '⡃': '⢛', '⠹': '⢜', '⠁': '⢝', '⡠': '⢞', '⠄': '⢟', '⠞': '⢠', '⡚': '⢡', '⢷': '⢢', '⢛': '⢣', '⡧': '⢤', '⠊': '⢥', '⣾': '⢦', '⠕': '⢧', '⠖': '⢨', '⠅': '⢩', '⡣': '⢪', '⠮': '⢫', '⣮': '⢬', '⣭': '⢭', '⣡': '⢮', '⡄': '⢯', ' ': '⢰', '⢾': '⢱', '⢼': '⢲', '⠱': '⢳', '⣗': '⢴', '⣍': '⢵', '⣤': '⢶', '⠵': '⢷', '⡊': '⢸', '⢕': '⢹', '⢚': '⢺', '⣈': '⢻', '⣥': '⢼', '⠢': '⢽', '⢎': '⢾', '⢄': '⢿', '⠉': '⣀', '⢸': '⣁', '⠼': '⣂', '⠘': '⣃', '⣵': '⣄', '⣐': '⣅', '⡈': '⣆', '⢜': '⣇', '⡓': '⣈', '⡼': '⣉', '⢔': '⣊', '⠟': '⣋', '⢒': '⣌', '⣄': '⣍', '⣼': '⣎', '⢞': '⣏', '⡙': '⣐', '⠔': '⣑', '⢭': '⣒', '⢥': '⣓', '⣁': '⣔', '⣬': '⣕', '⠙': '⣖', '⣶': '⣗', '⢣': '⣘', '⢮': '⣙', '⢂': '⣚', '⣌': '⣛', '⡪': '⣜', '⠳': '⣝', '⣂': '⣞', '⢫': '⣟', '⣜': '⣠', '⠤': '⣡', '⢵': '⣢', '⣨': '⣣', '⢤': '⣤', '⠍': '⣥', '⡴': '⣦', '⢋': '⣧', '⢯': '⣨', '⣧': '⣩', '⠠': '⣪', '⡦': '⣫', '⡻': '⣬', '⡛': '⣭', '⣉': '⣮', '⣱': '⣯', '⣘': '⣰', '⠿': '⣱', '⢻': '⣲', '⠻': '⣳', '⣳': '⣴', '⣔': '⣵', '⢺': '⣶', '⣪': '⣷', '⢱': '⣸', '⣦': '⣹', '⠴': '⣺', '⡫': '⣻', '⠇': '⣼', '⠐': '⣽', '⣢': '⣾', '⠝': '⣿', '⡒': ' '}

bestand_nummer = 1

for i in range(6):
    bestand_nummer = i
    bestand = open(f"ascii{bestand_nummer}.txt", "r", encoding="utf8")
    print(f"\n\n\nNummer {bestand_nummer}:\n")
    for lijn in bestand:
        vertaalde_lijn = ""
        for teken in lijn:
            vertaalde_lijn += ontcijfersleutel[teken]
        print(vertaalde_lijn)



